{{yield this.selectDocuments}}

{{!-- {{#ui-modal name="modal__document-selection" id=this.sansHashModalId class="ui long modal"}} --}}
<UiModal
  @name="modal__document-selection"
  @id={{this.sansHashModalId}}
  @class="ui long modal">
  <h1 class="ui header">{{if this.title this.title "Select Documents"}}</h1>

  <div class="content ui form">
    <p class="ui center aligned text">
      <a href="#" class={{if this.showDocumentUpload "text-danger"}} {{on "click" (prevent-default (toggle "showDocumentUpload" this))}}>
        {{#if this.showDocumentUpload}}
          <i class="close icon"></i> Close document upload
        {{else}}
          <i class="cloud upload icon"></i> Upload a file...
        {{/if}}
      </a>
    </p>

    {{#if this.showDocumentUpload}}
      <DropZone
        @id={{this.sansHashDropzoneId}}
        @class="input__dropzone"
        @url="/api/v1/file"
        @uploadMultiple={{false}}
        @maxFiles={{1}}
        @autoProcessQueue={{false}}
        @dictDefaultMessage="Drop or Click to Select a File"
        @thumbnailWidth="175"
        @headers={{hash X-API-Token=this.ajax.auth.token}}
        @addedfile={{this.addedFile}}
        @success={{this.uploadedFile}}
        @capture="camera"/>
      <div class="ui divider"></div>
      <Input::UiInput @type="text" @inputId="file-title" @placeholder="File Title" @value={{this.fileName}}/>

      {{#if this.showDescription}}
        <div class="field animated fadeInUp">
          <label for="file-description">Description</label>
          <Textarea @id="file-description" @rows="3" @placeholder="Description" @value={{this.description}}/>
        </div>
      {{/if}}

      <div class="field center aligned text">
        <a href="#" {{on "click" (prevent-default (toggle "showDescription" this))}}>
          <i class="angle {{if this.showDescription "up" "down"}} icon"></i>{{if this.showDescription "Hide" "Show"}} Description
        </a>
      </div>

      <form {{on "submit" (prevent-default this.uploadFile)}}>
        <Form::ActionButton type="submit" class="ui huge fluid green button" @loading={{this.data.statuses.working.isLoading}} disabled={{this.disableSubmit}}>Save document</Form::ActionButton>
      </form>
      <div class="ui divider"></div>
    {{/if}}

    <div class="ui two column grid">
      <div class="ui field column">
        <label>Search by text</label>
        <div class="ui icon input {{if this._searchDebounce "loading"}}">
          <Input @type="search" @placeholder="Search documents" @key-down={{this.searchTermChanged}} @value={{this.searchText}}/>
          <i class="search icon"></i>
        </div>
      </div>
      <div class="ui field column">
        <label>Limit by tag</label>
        {{#ui-dropdown class="search fluid selection"
          selected=this.selectedTag
          fullTextSearch=true
          forceSelection=false
          observeChanges=true
          onChange=(action (mut this.selectedTag)) as |execute mapper|}}
          <div class="default text">All Tags</div>
          <i class="dropdown icon"></i>
          <div class="menu">
            <div class="item" data-value="">All Tags</div>
            {{#each this.tags as |tag|}}
              <div class="item" data-value={{map-value mapper tag}}>
                {{tag}}
              </div>
            {{/each}}
          </div>
        {{/ui-dropdown}}
      </div>
    </div>

    <div class="ui divided list raised segment document-selection__results">
      {{#each this.results as |document|}}
        {{list-item/document-option file=document remove=(or (contains document this.selectedDocuments) (eq document this.selectedDocument)) onRemove=(action "removeDocument") onAddition=(action "addDocument")}}
      {{else}}
        <h3 class="ui center aligned light text header">No documents found.</h3>
      {{/each}}
      <div class="ui inverted {{if (or this.model.isPending this._searchDebounce) "active animated fadeInUp"}} dimmer">
        <div class="ui indeterminate text inverted loader">Searching Documents...</div>
      </div>
    </div>
    <div class="clearfix">
      <Elements::XPagination
        @page={{this.page}}
        @model={{this.results}}
        @limit={{this.limit}}
        @onChange={{set this.page _}} />
    </div>
    {{#if this.selectedDocuments}}
      <div class="ui divider"></div>
      <h3 class="ui header">Selected Documents</h3>
      <div class="ui divided list">
        {{#each this.selectedDocuments as |selectedDocument|}}
          <div class="item">
            {{list-item/document-option file=selectedDocument remove=true onRemove=(action "removeDocument")}}
          </div>
        {{/each}}
      </div>
      <button class="ui huge fluid positive button" {{action "assign"}}>{{if this.assignText this.assignText "Assign Documents"}}</button>
    {{/if}}

    {{#if this.selectedDocument}}
      <div class="ui divider"></div>
      <h3 class="ui header">Selected Document</h3>
      <div class="ui divided list">
        <div class="item">
          {{list-item/document-option file=this.selectedDocument remove=true onRemove=(action "removeDocument")}}
        </div>
      </div>
      <button class="ui huge fluid positive button" {{action "assign"}}>{{if this.assignText this.assignText "Assign Document"}}</button>
    {{/if}}
  </div>
</UiModal>

{{!-- Usage:  pass the component these four optional things:
 title(the title of the modal),
 singleDoc(opt in if you only want one doc)
 selectText(the text you want on the dropdown),
 assignText(the text you want on the modal launch button). --}}
