{{#if (not (and (not this.field.showLabel) (or (eq this.field.type "checkbox") (eq this.field.type "toggle"))))}}
  <label for={{this.computedClassName}} class={{this.field.labelClass}}>
    {{this.field.label}}
    {{#if (and this.field.helpText this.field.indirectHelp)}}
      <i class="help circle icon">
        {{ember-tooltip
          side="right"
          popperContainer="body"
          text=this.field.helpText}}
      </i>
    {{/if}}

    {{#if this.field.helpLink}}
      <LinkTo @route={{this.field.helpLink}} class="quick-form__help-text right floated">
        {{this.field.helpText}}
      </LinkTo>
    {{/if}}
  </label>

  {{#if (and (not this.field.helpLink) this.field.helpText (not this.field.indirectHelp))}}
    <p class="quick-form__help-text">{{this.field.helpText}}</p>
  {{/if}}
{{/if}}

{{#if (eq this.field.type "select")}}
  {{#ui-dropdown
    id=this.computedClassName
    class=this.inputClass
    selected=(readonly (get this.model this.field.path))
    forceSelection=false
    allowAdditions=(if this.field.inputAttrs.allowAdditions true false)
    onChange=(action (mut this.value))
    as |execute mapper|}}
    <div class="default text">
      {{#if this.field.selectText}}
        {{this.field.selectText}}
      {{else}}
        --Select--
      {{/if}}
    </div>
    <i class="dropdown icon"></i>
    <div class="menu">
      {{#each (get this this.field.contentPath) as |item|}}
        <div class="item" data-value={{map-value mapper (if this.field.valuePath (get item this.field.valuePath) item)}}>
          {{#if this.field.displayKey}}
            {{get item this.field.displayKey}}
          {{else}}
            {{item}}
          {{/if}}
        </div>
      {{/each}}
    </div>
  {{/ui-dropdown}}
{{else if (eq this.field.type "textarea")}}
  {{textarea
    value=this.value
    id=this.computedClassName
    rows=this.rows
    placeholder=(or this.field.placeholder this.field.label)
    spellcheck="true"}}
{{else if (eq this.field.type "richtext")}}
  {{input/rich-text
    value=this.value
    onChange=(action (mut this.value))}}
{{else if (or (eq this.field.type "checkbox") (eq this.field.type "toggle"))}}
  {{ui-checkbox
    id=this.computedClassName
    class=this.inputClass
    label=(or this.field.placeholder this.field.label)
    checked=(readonly this.value)
    onChange=(action (mut this.value))}}
{{else if (eq this.field.type "date")}}
  {{#if this.field.inputAttrs.inline}}
    {{ui-calendar
      class=this.inputClass type="date" inline=true onChange=(action (mut this.value))}}
  {{else}}
    {{ui-calendar
      type="date"
      class=this.inputClass
      dateValue=this.initialValue
      onChange=(action (mut this.value))}}
  {{/if}}
{{else if (eq this.field.type "radio")}}
  <div class="{{if this.field.inputAttrs.inline "inline" "grouped"}} fields">
    {{#each (get this this.field.contentPath) as |item|}}
      <div class="field">
        {{ui-radio
          name=this.computedClassName
          label=(if this.field.displayKey (get item this.field.displayKey) item)
          value=item
          current=this.value
          onChange=(action (mut this.value))}}
      </div>
    {{/each}}
  </div>
{{else if (eq this.field.type "file")}}
  {{#input/document-selection-modal
    title=(or this.field.placeholder this.field.label)
    selected=this.value
    assignText="Use Document"
    singleDoc=this.field.singleDoc
    autoTag=this.field.autoTag
    onSelected=(action (mut this.value))
    as |execute|
  }}
    <button class="ui basic button" {{action execute "selectDocuments"}}>
      <i class="folder icon"></i>
      {{or this.field.buttonText this.field.label}}
      {{#if this.value}}
        <span class="ui label">{{this.value.title}}</span>
      {{/if}}
    </button>
  {{/input/document-selection-modal}}
{{else if (eq this.field.type "color")}}
  {{color-picker
    components=this.colorPickerComponents
    comparison=false
    value=this.value
    onChange=(action "handleOnChange")
  }}
  <span class="ui small text">(Pick a color)</span>
{{else}}
  {{validated-input
    type=this.field.type
    model=this.model
    valuePath=this.field.path
    placeholder=(or this.field.placeholder this.field.label)
    inputAttrs=this.field.inputAttrs
    id=this.computedClassName
    inputClass=this.inputClass}}
{{/if}}

{{#if hasBlock}}
  {{yield}}
{{/if}}
